{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1910\\xz\\cart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1910\\xz\\cart.vue","mtime":1581927005974},{"path":"C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //购物车列表信息\n      allcb: false //全选框状态\n\n    };\n  },\n  created: function created() {\n    // 组件创建成功后 获取购物车列表信息\n    this.loadMore();\n  },\n  methods: {\n    sub: function sub() {\n      // 功能：修改全局共享数据fa\n      this.$store.commit(\"subFa\");\n    },\n    delm: function delm() {\n      var _this = this;\n\n      // 功能：删除选中商品\n      // 1：判断商品数量 如果数量为0 this.list\n      if (this.list.length == 0) {\n        // 2：显示确认框   当前没有可删除商品\n        this.$messagebox(\"消息\", \"当前没有可删除商品\"); // 3：返回\n\n        return;\n      } // 4：创建变量str  目的拼接字符串 \"2,3,4\"\n\n\n      var str = \"\"; // 5：创建循环遍历数组 this.list\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var i = _step.value;\n\n          if (i.cb == true) {\n            // 6：判断当前商品是否为选中状态 cb==true 获取id拼接字符串str+\",\"\n            str += i.id + \",\";\n          }\n        } // 7：判断：如果用户没有选中商品str.length==0\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        // 8：显示确认框 请选者要删除的商品\n        this.$messagebox(\"请选择需要删除的商品\");\n        return;\n      } // 8.1：截取字符串   \"2,3,\"=>\"2,3\"\n\n\n      str = str.substring(0, str.length - 1); // 9：显示确认交互框 是否删除指定数据\n      // 10：创建变量 url obj\n      // 11：发送ajax请求删除指定数据\n\n      this.$messagebox.confirm(\"是否删除指定商品?\").then(function (res) {\n        var url = \"delm\";\n        var obj = {\n          id: str\n        };\n\n        _this.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          // 重新请求数据，刷新页面\n          _this.loadMore();\n\n          _this.$toast(\"删除成功\");\n        });\n      }).catch(function (err) {});\n    },\n    selectAll: function selectAll() {\n      // 功能：全选按钮状态修改操作\n      // 1:获取全选按钮状态\n      var cb = this.allcb; // 2：创建循环遍历所有商品状态赋值\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    },\n    changeItem: function changeItem() {\n      // 功能：商品状态修改操作\n      // 功能一：累加商品状态为true\n      var sum = 0;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          if (item.cb) sum++;\n        } // 功能二：判断如果商品总数量与true总量相同\n\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (this.list.length == sum) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n    del: function del(id) {\n      var _this2 = this;\n\n      // 1：显示交互对话框\n      this.$messagebox.confirm(\"是否删除该商品\").then(function (res) {\n        //点击确认按钮\n        // 2：如果用户选中确认\n        // 3：创建变量url 保存中间人删除程序的地址 /del\n        var url = \"del\"; // 4：创建变量obj 保存id\n\n        var obj = {\n          id: id\n        }; // 5：发送ajax请求\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          if (res.data.code == 1) {\n            _this2.$toast(\"删除成功\");\n\n            _this2.loadMore();\n          }\n        }); // 6：获取返回结果 重新加载数据\n\n      }).catch(function (err) {});\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      console.log(11); //发送请求获取购物车数据\n      // 1：创建变量url\n\n      var url = \"findcart\"; // 2：发送ajax请求并且获取服务器返回数据\n\n      this.axios.get(url).then(function (res) {\n        if (res.data.code == -2) {\n          _this3.$toast(\"请登录\");\n\n          _this3.$router.push(\"/login\");\n        } else {\n          //  this.list=res.data.data\n          // 5.1:获取服务器中购物车列表，临时保存变量rows\n          var rows = res.data.data; // 5.2创建循环遍历数组 在每个商品中添加cb属性\n\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var item = _step4.value;\n              item.cb = false;\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          _this3.list = rows;\n        }\n      });\n      var sum = 0;\n      var _iteratorNormalCompletion5 = true;\n      var _didIteratorError5 = false;\n      var _iteratorError5 = undefined;\n\n      try {\n        for (var _iterator5 = this.list[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n          var item = _step5.value;\n          sum += item.count;\n        }\n      } catch (err) {\n        _didIteratorError5 = true;\n        _iteratorError5 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion5 && _iterator5.return != null) {\n            _iterator5.return();\n          }\n        } finally {\n          if (_didIteratorError5) {\n            throw _iteratorError5;\n          }\n        }\n      }\n\n      this.$store.commit(\"addCart\", sum); // 3：获取服务器返回数据 code==-2 提示请登录 跳转到login\n      // 4：获取服务器返回数据  code==1 将服务器返回购物车列表保存list\n      // 5：在模板中创建循环显示购物车列表\n    }\n  }\n};",{"version":3,"sources":["cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!-- 1：顶部全选复选框 -->\r\n    <div class=\"selectall\">\r\n      全选<input type=\"checkbox\" v-model=\"allcb\" @change=\"selectAll\">\r\n    </div>\r\n    <!-- 2：购物车商品列表 -->\r\n    <div class=\"cartItem\" v-for=\"(item,i) of list\" :key=\"i\">\r\n      <div class=\"leftImgTxt\">\r\n        <input type=\"checkbox\" @change=\"changeItem\" v-model=\"item.cb\">\r\n        <div class=\"title\">{{item.lname}}</div>\r\n        <div class=\"title\">{{item.price}}</div>\r\n      </div>\r\n      <mt-button @click=\"del(item.id)\">删除</mt-button>\r\n    </div>\r\n    <!-- 3：一组按钮 -->\r\n    <div>\r\n      购物车中商品数量<span style=\"color:red\">{{$store.getters.getCartCount}}</span>\r\n      <!-- 亮哥的发量 <span style=\"color:red\">\r\n        {{$store.getters.getFa}}\r\n      </span>\r\n      <mt-button @click=\"sub\">掉一根</mt-button> -->\r\n      <mt-button @click=\"delm\">删除选中商品</mt-button>\r\n      <mt-button>清空购物车</mt-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      list:[],//购物车列表信息\r\n      allcb:false //全选框状态\r\n    }\r\n  },\r\n  created(){\r\n    // 组件创建成功后 获取购物车列表信息\r\n    this.loadMore()\r\n  },\r\n  methods:{\r\n    sub(){\r\n      // 功能：修改全局共享数据fa\r\n      this.$store.commit(\"subFa\")\r\n    },\r\n    delm(){\r\n      // 功能：删除选中商品\r\n      // 1：判断商品数量 如果数量为0 this.list\r\n      if(this.list.length==0){\r\n      // 2：显示确认框   当前没有可删除商品\r\n        this.$messagebox(\"消息\",\"当前没有可删除商品\")\r\n      // 3：返回\r\n        return\r\n      }\r\n      // 4：创建变量str  目的拼接字符串 \"2,3,4\"\r\n      var str=\"\";\r\n      // 5：创建循环遍历数组 this.list\r\n        for(var i of this.list){\r\n          if(i.cb==true){\r\n            // 6：判断当前商品是否为选中状态 cb==true 获取id拼接字符串str+\",\"\r\n            str+=i.id+\",\"\r\n          }\r\n        }\r\n      // 7：判断：如果用户没有选中商品str.length==0\r\n      if(str.length==0){\r\n      // 8：显示确认框 请选者要删除的商品\r\n        this.$messagebox(\"请选择需要删除的商品\")\r\n        return;\r\n      }\r\n      // 8.1：截取字符串   \"2,3,\"=>\"2,3\"\r\n      str= str.substring(0,str.length-1)\r\n      // 9：显示确认交互框 是否删除指定数据\r\n      // 10：创建变量 url obj\r\n      // 11：发送ajax请求删除指定数据\r\n      this.$messagebox.confirm(\"是否删除指定商品?\").then(res=>{\r\n        var url=\"delm\";\r\n        var obj={id:str}\r\n        this.axios.get(url,{params:obj}).then(res=>{\r\n          // 重新请求数据，刷新页面\r\n          this.loadMore();\r\n          this.$toast(\"删除成功\")\r\n        })\r\n      }).catch(err=>{})\r\n    },\r\n    selectAll(){\r\n      // 功能：全选按钮状态修改操作\r\n      // 1:获取全选按钮状态\r\n      var cb=this.allcb\r\n      // 2：创建循环遍历所有商品状态赋值\r\n      for(var item of this.list){\r\n        item.cb=cb\r\n      }\r\n    },\r\n    changeItem(){\r\n      // 功能：商品状态修改操作\r\n      // 功能一：累加商品状态为true\r\n      var sum=0;\r\n      for(var item of this.list ){\r\n        if(item.cb)sum++;\r\n      }\r\n      // 功能二：判断如果商品总数量与true总量相同\r\n      if(this.list.length==sum){\r\n        this.allcb=true;\r\n      }else{\r\n        this.allcb=false;\r\n      }\r\n    },\r\n    del(id){\r\n      // 1：显示交互对话框\r\n      this.$messagebox.confirm(\"是否删除该商品\").then(res=>{\r\n        //点击确认按钮\r\n         // 2：如果用户选中确认\r\n      // 3：创建变量url 保存中间人删除程序的地址 /del\r\n      var url =\"del\";\r\n      // 4：创建变量obj 保存id\r\n      var obj={id};\r\n      // 5：发送ajax请求\r\n      this.axios.get(url,{params:obj}).then(res=>{\r\n        if(res.data.code==1){\r\n          this.$toast(\"删除成功\")\r\n          this.loadMore()\r\n        }\r\n      })\r\n      // 6：获取返回结果 重新加载数据\r\n      }).catch(err=>{\r\n      })\r\n    },\r\n    loadMore(){\r\n      console.log(11)\r\n      //发送请求获取购物车数据\r\n      // 1：创建变量url\r\n      var url=\"findcart\";\r\n      // 2：发送ajax请求并且获取服务器返回数据\r\n      this.axios.get(url).then(res=>{\r\n        if(res.data.code==-2){\r\n          this.$toast(\"请登录\")\r\n          this.$router.push(\"/login\")\r\n        }else{\r\n        //  this.list=res.data.data\r\n        // 5.1:获取服务器中购物车列表，临时保存变量rows\r\n        var rows= res.data.data\r\n        // 5.2创建循环遍历数组 在每个商品中添加cb属性\r\n        for(var item of rows){\r\n          item.cb=false\r\n        }\r\n        this.list=rows\r\n        }\r\n      })\r\n      var sum=0;\r\n        for(var item of this.list){\r\n          sum+=item.count\r\n        }\r\n        this.$store.commit(\"addCart\",sum)\r\n      // 3：获取服务器返回数据 code==-2 提示请登录 跳转到login\r\n      // 4：获取服务器返回数据  code==1 将服务器返回购物车列表保存list\r\n      // 5：在模板中创建循环显示购物车列表\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/* 1:一个商品项目元素 */\r\n.cartItem{\r\n  display:flex;/*弹性布局*/\r\n  justify-content: space-between;/*子元素两端对齐*/\r\n  align-items: center;/*子元素垂直居中*/\r\n  border-bottom:1px solid #555;\r\n  margin-top:25px;\r\n}\r\n/* 2：左侧【商品名称与价格】 */\r\n.leftImgTxt{\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n.title{\r\n  margin-left:15px;\r\n}\r\n</style>"],"sourceRoot":"src\\components\\web1910\\xz"}]}