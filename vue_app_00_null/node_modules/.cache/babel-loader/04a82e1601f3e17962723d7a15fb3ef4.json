{"remainingRequest":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1909\\xz\\Product.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1909\\xz\\Product.vue","mtime":1578103794000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //保存服务器返回数据\n      pno: 0 //表示当前页码\n\n    };\n  },\n  created: function created() {\n    //生命周期:组件创建成功\n    this.loadMore();\n  },\n  methods: {\n    jumpcart: function jumpcart() {\n      //功能:跳转购物车组件\n      this.$router.push(\"/Cart\");\n    },\n    addcart: function addcart(lid, lname, price) {\n      var _this = this;\n\n      console.log(1);\n      console.log(lid + \"_\" + lname + \"_\" + price); //1:创建变量url请求服务器程序\n\n      var url = \"addcart\"; //2:创建变量obj请求服务器程序参数\n\n      var obj = {\n        lid: lid,\n        lname: lname,\n        price: price\n      }; //3:发送ajax请求\n\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        // 4:接收服务器返回结果\n        // 5:-2 提示请登录 跳转登录组件\n        if (res.data.code == -2) {\n          _this.$toast(\"请登录\");\n\n          _this.$router.push(\"/Login\");\n        } else {\n          _this.$toast(\"添加成功\");\n        } // 6:1  添加成\n\n      });\n    },\n    loadMore: function loadMore() {\n      var _this2 = this;\n\n      //加载商品列表\n      //console.log(123);\n      //1:创建变量url请求服务器程序\n      var url = \"product\"; //2:创建变量obj请示服务器参数\n\n      this.pno++;\n      var obj = {\n        pno: this.pno //3:发送请求\n\n      };\n      this.axios.get(url, {\n        params: obj\n      }).then(function (res) {\n        //console.log(res)\n        //4:获取服务器返回结果\n        //5:在data添加属性list\n        //6:将返回数据保存list\n        //问题:保存多页数据\n        //解决:concat 数组拼接\n        //this.list = res.data.data;\n        //6.1:拼接多页数据\n        var rows = _this2.list.concat(res.data.data); //6.2:赋值\n\n\n        _this2.list = rows;\n      });\n    }\n  }\n};",{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAyBA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,YAAA,EADA;AACA;AACA,WAAA,CAFA,CAEA;;AAFA,KAAA;AAIA,GANA;AAOA,SAPA,qBAOA;AACA;AACA,SAAA,QAAA;AACA,GAVA;AAWA,WAAA;AACA,YADA,sBACA;AACA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KAJA;AAKA,WALA,mBAKA,GALA,EAKA,KALA,EAKA,KALA,EAKA;AAAA;;AACA,cAAA,GAAA,CAAA,CAAA;AACA,cAAA,GAAA,CAAA,MAAA,GAAA,GAAA,KAAA,GAAA,GAAA,GAAA,KAAA,EAFA,CAGA;;AACA,UAAA,MAAA,SAAA,CAJA,CAKA;;AACA,UAAA,MAAA;AAAA,gBAAA;AAAA,oBAAA;AAAA;AAAA,OAAA,CANA,CAOA;;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA,YAAA,IAAA,IAAA,CAAA,IAAA,IAAA,CAAA,CAAA,EAAA;AACA,gBAAA,MAAA,CAAA,KAAA;;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,SAHA,MAGA;AACA,gBAAA,MAAA,CAAA,MAAA;AACA,SARA,CASA;;AACA,OAVA;AAWA,KAxBA;AAyBA,YAzBA,sBAyBA;AAAA;;AACA;AACA;AACA;AACA,UAAA,MAAA,SAAA,CAJA,CAKA;;AACA,WAAA,GAAA;AACA,UAAA,MAAA;AAAA,aAAA,KAAA,GAAA,CACA;;AADA,OAAA;AAEA,WAAA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AAAA,gBAAA;AAAA,OAAA,EAAA,IAAA,CAAA,eAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAA,OAAA,OAAA,IAAA,CAAA,MAAA,CAAA,IAAA,IAAA,CAAA,IAAA,CAAA,CATA,CAUA;;;AACA,eAAA,IAAA,GAAA,IAAA;AACA,OAZA;AAaA;AA/CA;AAXA,CAAA","sourcesContent":["<template>\r\n  <!--1:弹性布局-->\r\n  <div class=\"product_app\">\r\n    <!--2:一个商品-->\r\n    <div class=\"goods-item\" v-for=\"(item,i) of list\" :key=\"i\">\r\n      <!--3:商品图片-->\r\n      <img :src=\"'http://127.0.0.1:4000/'+item.img_url\" />\r\n      <!--4:商品名称-->\r\n      <h4>{{item.lname}}</h4>\r\n      <!--5:商品价格-->\r\n      <h5 class=\"price\">{{item.price}}</h5>\r\n      <!--6:加入购物车按钮-->\r\n      <mt-button @click=\"addcart(item.lid,item.lname,item.price)\">\r\n        加入购物车\r\n      </mt-button>\r\n    </div>\r\n    <!--7:查看购物车按钮-->\r\n     <mt-button size=\"large\" @click=\"jumpcart\">\r\n       查看购物车\r\n     </mt-button>\r\n    <!--8:加载更多按钮-->\r\n     <mt-button size=\"large\" @click=\"loadMore\">加载更多</mt-button>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n       list:[],//保存服务器返回数据\r\n       pno:0, //表示当前页码\r\n    }\r\n  },\r\n  created(){\r\n    //生命周期:组件创建成功\r\n    this.loadMore();\r\n  },\r\n  methods:{\r\n    jumpcart(){\r\n      //功能:跳转购物车组件\r\n      this.$router.push(\"/Cart\");\r\n    },\r\n    addcart(lid,lname,price){\r\n     console.log(1);\r\n     console.log(lid+\"_\"+lname+\"_\"+price);\r\n     //1:创建变量url请求服务器程序\r\n     var url = \"addcart\";\r\n     //2:创建变量obj请求服务器程序参数\r\n     var obj = {lid,lname,price};\r\n     //3:发送ajax请求\r\n     this.axios.get(url,{params:obj}).then(res=>{\r\n     // 4:接收服务器返回结果\r\n     // 5:-2 提示请登录 跳转登录组件\r\n     if(res.data.code == -2){\r\n       this.$toast(\"请登录\");\r\n       this.$router.push(\"/Login\")\r\n     }else{\r\n       this.$toast(\"添加成功\");\r\n     }\r\n     // 6:1  添加成\r\n     })\r\n    },\r\n    loadMore(){\r\n      //加载商品列表\r\n      //console.log(123);\r\n      //1:创建变量url请求服务器程序\r\n      var url = \"product\";\r\n      //2:创建变量obj请示服务器参数\r\n      this.pno++;\r\n      var obj = {pno:this.pno}\r\n      //3:发送请求\r\n      this.axios.get(url,{params:obj}).then(res=>{\r\n      //console.log(res)\r\n      //4:获取服务器返回结果\r\n      //5:在data添加属性list\r\n      //6:将返回数据保存list\r\n      //问题:保存多页数据\r\n      //解决:concat 数组拼接\r\n      //this.list = res.data.data;\r\n      //6.1:拼接多页数据\r\n      var rows = this.list.concat(res.data.data);\r\n      //6.2:赋值\r\n      this.list = rows;\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/*外层父元素:弹性布局*/\r\n.product_app{\r\n  display: flex;\r\n  flex-wrap: wrap;/*子元素换行*/\r\n  /*子元素两端对齐*/\r\n  justify-content: space-between;\r\n  padding:4px;\r\n}\r\n/*一个商品*/\r\n.goods-item{\r\n  width:48%;/*占用屏幕一半*/\r\n  border:1px solid #ccc;\r\n  border-radius: 5px;/*圆角*/\r\n  margin:2px 0;/*外边距*/\r\n  padding:2px;\r\n  display: flex;/*子元素弹性*/\r\n  flex-direction: column;/*列*/\r\n  min-height: 257px;\r\n}\r\n/*商品里图片*/ \r\n.goods-item img{\r\n  width:100%;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src\\components\\web1909\\xz"}]}