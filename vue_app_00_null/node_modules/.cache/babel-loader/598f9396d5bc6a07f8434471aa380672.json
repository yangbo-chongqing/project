{"remainingRequest":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js!c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1909\\xz\\Cart.vue?vue&type=script&lang=js","dependencies":[{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\src\\components\\web1909\\xz\\Cart.vue","mtime":1578378480000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"c:\\Users\\Administrator\\Desktop\\yangb\\VueUI\\day01\\vue_app_00_null\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      //购物车列表\n      allcb: false //全选状态\n\n    };\n  },\n  created: function created() {\n    //组件创建成功后调用加载购物车函数\n    this.loadMore();\n  },\n  methods: {\n    delm: function delm() {\n      var _this = this;\n\n      //功能:删除选中商品\n      //1:当前商品列表中长度0\n      //2:提示:没有可以删除商品\n      if (this.list.length == 0) {\n        this.$messagebox(\"消息\", \"当前没有可删除商品\");\n        return;\n      } //3:拼接商品id字符串\n      //4:创建变量str\n\n\n      var str = \"\"; //5:创建循环遍历商品,如果当前状态等于true 将id拼接str\n\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.list[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n\n          if (item.cb) {\n            //选中\n            str += item.id + \",\";\n          }\n        } //6:提示:请选择要删除商品\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      if (str.length == 0) {\n        this.$messagebox(\"消息\", \"请选择需要删除商品\");\n        return;\n      } //7:截取字符串 ,\n\n\n      str = str.substring(0, str.length - 1); //8:显示确认交互框\n\n      this.$messagebox.confirm(\"是否删除数据?\").then(function (res) {\n        //9:创建变量url保存服务器程序地址\n        var url = \"delm\"; //10:创建变量obj多个id\n\n        var obj = {\n          id: str\n        }; //11:发送ajax请求并且获取返回结果\n\n        _this.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          //12:重新加载商品列表\n          _this.loadMore(); //13:显示提示信息\n\n\n          _this.$toast(\"删除成功\");\n        });\n      }).catch(function (err) {});\n    },\n    changeitem: function changeitem() {\n      //功能:商品前复选状修改函数\n      //1:获取商品列表数组长度\n      var size = this.list.length; //2:计算选中状态商品几个\n\n      var sum = 0;\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          //item.cb==true商品选中\n          if (item.cb) sum++;\n        } //3:如果商品选中数量与数组长度\n        //  相同 全选 选中\n        //  不相同 全选 清空\n\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      if (size == sum) {\n        this.allcb = true;\n      } else {\n        this.allcb = false;\n      }\n    },\n    selectAll: function selectAll() {\n      //功能:全选复选框\n      //1:获取全选状态\n      var cb = this.allcb; //2:创建循环遍历商品列表\n      //  将全选状态赋值商品列表项状态\n\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          item.cb = cb;\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    },\n    del: function del(id) {\n      var _this2 = this;\n\n      //功能:发送请求完成删除商品任务\n      //1:获取购物车商品id\n      console.log(1);\n      console.log(id); //2:显示交互对话框\n      //防止用户误操作\n\n      this.$messagebox.confirm(\"是否删除指定商品?\").then(function (res) {\n        //3:如果用户选择 确认\n        //4:创建变量url\n        var url = \"del\"; //5:创建变量obj\n\n        var obj = {\n          id: id //6:发送请求\n\n        };\n\n        _this2.axios.get(url, {\n          params: obj\n        }).then(function (res) {\n          //7:接收服务器返回数据\n          if (res.data.code == 1) {\n            //8:提示删除成功\n            _this2.$toast(\"删除成功\"); //9:重新加载购物车商品列表\n\n\n            _this2.loadMore();\n          }\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    },\n    loadMore: function loadMore() {\n      var _this3 = this;\n\n      //加载购物车列表函数\n      //1:创建变量url请求服务器地址\n      var url = \"findcart\"; //2:发送ajax请求并且获取服务器\n      //  返回结果\n\n      this.axios.get(url).then(function (res) {\n        //console.log(1);\n        //console.log(res);\n        //3:code == -2 请登录45\n        if (res.data.code == -2) {\n          _this3.$toast(\"请登录\");\n\n          _this3.$router.push(\"/Login\");\n\n          return;\n        } else {\n          //4:code == 1  返回正确数据\n          //获数据保存list\n          //this.list = res.data.data;\n          //4.1:获取服务器返回数据\n          var rows = res.data.data; //4.2:创建循环变量数组中值\n          //并且添加属性cb商品选中状态\n\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = rows[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var item = _step4.value;\n              item.cb = false;\n            } //4.3:将新数组赋值list\n\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          _this3.list = rows; //4.4:在模板中添加cb属性\n          //4.5:在加载购物车之前清空\n          //4.6:修改购物车数量vuex\n\n          _this3.$store.commit(\"addmCart\", _this3.list.length);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["Cart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!--Cart.vue 购物车组件-->\r\n    <!--(1)顶部全选复选框-->\r\n    <div class=\"selectall\">\r\n     全选 <input type=\"checkbox\" v-model=\"allcb\" @change=\"selectAll\"/>\r\n    </div>\r\n    <!--(2)购物车列表-->\r\n    <div class=\"cartitem\" v-for=\"(item,i) of list\" :key=\"i\">\r\n       <div class=\"leftimgtxt\">\r\n          <input type=\"checkbox\" v-model=\"item.cb\" @change=\"changeitem\"/>\r\n          <div>{{item.lname}}</div>\r\n          <div>{{item.price}}</div>\r\n       </div>\r\n       <mt-button @click=\"del(item.id)\">删</mt-button>\r\n    </div>\r\n    <!--(3)一组按钮-->\r\n    <!--删除选中商品 清空购物车-->\r\n    <!--商品数量-->\r\n    <div>\r\n      购物车商品数量<span style=\"color:red;\">\r\n       {{$store.getters.getCart}}\r\n      </span>\r\n      <mt-button @click=\"delm\">\r\n        删除选中商品\r\n      </mt-button>\r\n      <mt-button>清空购物车</mt-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data(){\r\n    return {\r\n      list:[], //购物车列表\r\n      allcb:false,//全选状态\r\n    }\r\n  },\r\n  created(){\r\n    //组件创建成功后调用加载购物车函数\r\n    this.loadMore();\r\n  },\r\n  methods:{\r\n    delm(){\r\n      //功能:删除选中商品\r\n      //1:当前商品列表中长度0\r\n      //2:提示:没有可以删除商品\r\n      if(this.list.length==0){\r\n        this.$messagebox(\"消息\",\"当前没有可删除商品\");\r\n        return;\r\n      }\r\n      //3:拼接商品id字符串\r\n      //4:创建变量str\r\n      var str = \"\";\r\n      //5:创建循环遍历商品,如果当前状态等于true 将id拼接str\r\n      for(var item of this.list){\r\n         if(item.cb){//选中\r\n           str+=item.id+\",\"\r\n         }\r\n      }\r\n      //6:提示:请选择要删除商品\r\n      if(str.length==0){\r\n        this.$messagebox(\"消息\",\"请选择需要删除商品\");\r\n        return;\r\n      }\r\n      //7:截取字符串 ,\r\n      str = str.substring(0,str.length-1);\r\n     //8:显示确认交互框\r\n     this.$messagebox.confirm(\"是否删除数据?\")\r\n     .then(res=>{\r\n     //9:创建变量url保存服务器程序地址\r\n     var url = \"delm\"\r\n     //10:创建变量obj多个id\r\n     var obj = {id:str};\r\n     //11:发送ajax请求并且获取返回结果\r\n     this.axios.get(url,{params:obj}).then(res=>{\r\n      //12:重新加载商品列表\r\n      this.loadMore();\r\n      //13:显示提示信息\r\n      this.$toast(\"删除成功\")\r\n     })\r\n     })\r\n     .catch(err=>{\r\n     })\r\n  \r\n\r\n\r\n\r\n\r\n\r\n    },\r\n    changeitem(){\r\n      //功能:商品前复选状修改函数\r\n      //1:获取商品列表数组长度\r\n      var size = this.list.length;\r\n      //2:计算选中状态商品几个\r\n      var sum = 0;\r\n      for(var item of this.list){\r\n        //item.cb==true商品选中\r\n         if(item.cb)sum++;\r\n      }\r\n      //3:如果商品选中数量与数组长度\r\n      //  相同 全选 选中\r\n      //  不相同 全选 清空\r\n      if(size==sum){\r\n        this.allcb=true;\r\n      }else{\r\n        this.allcb=false;\r\n      }\r\n    },\r\n    selectAll(){\r\n      //功能:全选复选框\r\n      //1:获取全选状态\r\n      var cb = this.allcb;\r\n      //2:创建循环遍历商品列表\r\n      //  将全选状态赋值商品列表项状态\r\n      for(var item of this.list){\r\n        item.cb = cb;\r\n      }\r\n\r\n    },\r\n    del(id){\r\n      //功能:发送请求完成删除商品任务\r\n      //1:获取购物车商品id\r\n      console.log(1);\r\n      console.log(id)\r\n      //2:显示交互对话框\r\n      //防止用户误操作\r\n      this.$messagebox.confirm(\"是否删除指定商品?\")\r\n      .then(res=>{\r\n      //3:如果用户选择 确认\r\n      //4:创建变量url\r\n      var url = \"del\";\r\n      //5:创建变量obj\r\n      var obj = {id}\r\n      //6:发送请求\r\n      this.axios.get(url,{params:obj}).then(res=>{\r\n       //7:接收服务器返回数据\r\n       if(res.data.code==1){\r\n        //8:提示删除成功\r\n        this.$toast(\"删除成功\");\r\n        //9:重新加载购物车商品列表\r\n        this.loadMore();\r\n       }\r\n      })\r\n      })\r\n      .catch(err=>{\r\n        console.log(err);\r\n      })\r\n      \r\n    },\r\n    loadMore(){\r\n     //加载购物车列表函数\r\n     //1:创建变量url请求服务器地址\r\n     var url = \"findcart\";\r\n     //2:发送ajax请求并且获取服务器\r\n     //  返回结果\r\n     this.axios.get(url).then(res=>{\r\n      //console.log(1);\r\n      //console.log(res);\r\n      //3:code == -2 请登录45\r\n      if(res.data.code == -2){\r\n        this.$toast(\"请登录\");\r\n        this.$router.push(\"/Login\");\r\n        return;\r\n      }else{\r\n        //4:code == 1  返回正确数据\r\n        //获数据保存list\r\n        //this.list = res.data.data;\r\n        //4.1:获取服务器返回数据\r\n        var rows = res.data.data;\r\n        //4.2:创建循环变量数组中值\r\n        //并且添加属性cb商品选中状态\r\n        for(var item of rows){\r\n          item.cb = false;\r\n        }\r\n        //4.3:将新数组赋值list\r\n        this.list = rows;\r\n        //4.4:在模板中添加cb属性\r\n        //4.5:在加载购物车之前清空\r\n        //4.6:修改购物车数量vuex\r\n        this.$store.commit(\"addmCart\",this.list.length);\r\n      }\r\n     })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n/*1:商品项目元素*/\r\n.cartitem{\r\n  display: flex;/*弹性布局*/\r\n  /*子元素两端对齐*/\r\n  justify-content: space-between;\r\n  /*子元素垂直居中*/\r\n  align-items: center;\r\n  /*底部灰色边线*/\r\n  border-bottom:1px solid #ccc;\r\n  /*商品之间间距*/\r\n  margin-top:25px;\r\n}\r\n/*2:左侧文字[商品名称与价格]*/\r\n.leftimgtxt{\r\n  display: flex;/*弹性布局*/\r\n  align-items: center;/*垂直居中*/\r\n}\r\n/*将list显示模板... 35*/\r\n.mint-button{\r\n  font-size:13px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src\\components\\web1909\\xz"}]}